{"version":3,"sources":["../../src/utils/px.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AAIpD;IAAA;IAoBA,CAAC;IAnBC,kCAAS,GAAT,UAAU,KAAsB,EAAE,IAAc;QAC9C,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACxB,CAAC;IACH,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAE,IAAI;iBACX,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,qBAAC;CApBD,AAoBC,IAAA;SApBY,cAAc","file":"px.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n\r\nexport class PixelConverter implements PipeTransform {\r\n  transform(value: string | number, args: string[]): any {\r\n    if (value === undefined) {\r\n        return;\r\n    }\r\n    if (typeof value === 'string') {\r\n        return value;\r\n    }\r\n    if (typeof value === 'number') {\r\n        return value + 'px';\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n  name: 'px'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}